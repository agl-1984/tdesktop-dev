name: Public Linux Release.

on:
  push:
    paths-ignore:
      - '**'
      - '!.github/workflows/release_linux.yml'
      - '!Telegram/build/release_build.py'
      - '!Telegram/build/build.sh'
  workflow_dispatch:

jobs:

  Linux:
    name: Rocky Linux 8
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/${{ github.repository }}/centos_env
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    defaults:
      run:
        shell: scl enable gcc-toolset-12 -- bash --noprofile --norc -eo pipefail {0}

    strategy:
      matrix:
        defines:
          - ""
#          - "DESKTOP_APP_DISABLE_X11_INTEGRATION"
#          - "DESKTOP_APP_DISABLE_WAYLAND_INTEGRATION"

    env:
      UPLOAD_ARTIFACT: "true"

    steps:
      - name: Get repository name.
        run: echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Clone.
        uses: actions/checkout@v3.1.0
        with:
          submodules: recursive
          path: ${{ env.REPO_NAME }}

      - name: First set up.
        run: |
          gcc --version
          ln -s /usr/src/Libraries

      - name: Read defines.
        run: |
          echo "ARTIFACT_NAME=PTelegram_${{ matrix.arch }}" >> $GITHUB_ENV

      - name: Telegram Desktop build.
        env:
          RSA_PRIVATE: ${{ secrets.RSA_PRIVATE }}
          API_ID: ${{ secrets.API_ID }}
          API_HASH: ${{ secrets.API_HASH }}
        run: |
          cd %TBUILD%\%REPO_NAME%\Telegram\build

          python release_build.py linux

      - name: Move artifact.
        if: (env.UPLOAD_ARTIFACT == 'true') || ${{ github.ref == 'refs/heads/nightly' }}
        run: |
          del artifact /Q/F/S
          mkdir artifact
          xcopy %TBUILD%\%REPO_NAME%\out\Release\deploy artifact /E/C
      - uses: actions/upload-artifact@master
        name: Upload artifact.
        if: (env.UPLOAD_ARTIFACT == 'true') || ${{ github.ref == 'refs/heads/nightly' }}
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: artifact\
